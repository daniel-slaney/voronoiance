TODO

- End Game is a little abrupt.
- Enemy AI is a bit flakey
  - Specifically bombers seem to not care when they're close.
    - They would be hard to kill otherwise though.
- The help screen is hard to read
  - Also just controls and no general information.
- No indication that ? toggles help outside of the help screen
- Slime colours not informative enough.
- It's probably too hard
- Need some abilities
- Need some progression
- WOuld be nice to know when bombers have bombs ready.
- Need variation in dungeon theme
  - At least some different colours by depth
  - Maybe different terrain types even if they don't effect gameplay
  - Maybe brogue style lakes?
  - Grass and other floor covering might be good.
    - How will they interact with slugs and slime?

- Line of Sight
  - Could use shadow casting
    - Problem with partially uncovered cells.
      - Should the uncovered parts be rendered as 'seen' but not in view?

- Not enough enemy types
- Level gen is still creates weirdness
  - Cells connected by tiny walls
    - Need hulls for corridors, especially very short ones.
    - This is so the enclose code doesn't put filler near corridors.
      - Tried this, makes corridors wider which is a little strange.
      - Using hulls for the corridors and adding buffer points parallel helps.
  - Some missing diagonals
    - This happens when enclose puts points near to where a grid would
      place them.
  - roomgen.enclose() creates some strange rooms with nasty edges
    - trying a new roomgen that creates random points then uses a few iterations
      of lloyd's relaxation. no more silly edges!
      - It's not perfect and a bit slow but I'm going with it.
  - Corridors that merge.
    - Choosing the nearest points between rooms is causing it
    - Changing to a corridor algotihm that tries to be as close as possible to
      the line between centroids of the repsective rooms.
      - Looking good so far.

- Want a nice build script to create the *.love, exes and app.


- Tech Debt
  - Factor Level gen into functions operating only on passed in state instead
    of methods.
  - There's too many Demeter violations looking into level graphs and so on.
  - Inconsistent use of the terms point, vertex and so on.


-- COMMIT

-- stuff to be done before commit
-- - check new levelgen in gamemode
-- - check that levels are connected and if not could they be made connected easily
--   - e.g. change isolated floor into wall.

Improvements to level gen:

- Relaxed rooms replace enclose rooms.
- Room placement doesn't waste as many rooms and places them at more appropiate
  distance from each other.
- Corridors have tidier cells and don't overlap as much.
- No paths over very short edges.
- Trim stragglers.
- Critical path is found.
- convex.hull() no longer generates colinear edges.
- Tests run on startup commented out or surrouned with if false then ... end.


